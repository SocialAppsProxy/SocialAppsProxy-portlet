/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.wordpress.metaphorm.authProxy.sb.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the OAuthProvider service. Represents a row in the &quot;OAuthProxy_OAuthProvider&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.wordpress.metaphorm.authProxy.sb.model.impl.OAuthProviderModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.wordpress.metaphorm.authProxy.sb.model.impl.OAuthProviderImpl}.
 * </p>
 *
 * @author stiansigvartsen
 * @see OAuthProvider
 * @see com.wordpress.metaphorm.authProxy.sb.model.impl.OAuthProviderImpl
 * @see com.wordpress.metaphorm.authProxy.sb.model.impl.OAuthProviderModelImpl
 * @generated
 */
public interface OAuthProviderModel extends BaseModel<OAuthProvider> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a o auth provider model instance should use the {@link OAuthProvider} interface instead.
	 */

	/**
	 * Returns the primary key of this o auth provider.
	 *
	 * @return the primary key of this o auth provider
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this o auth provider.
	 *
	 * @param primaryKey the primary key of this o auth provider
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the provider ID of this o auth provider.
	 *
	 * @return the provider ID of this o auth provider
	 */
	public long getProviderId();

	/**
	 * Sets the provider ID of this o auth provider.
	 *
	 * @param providerId the provider ID of this o auth provider
	 */
	public void setProviderId(long providerId);

	/**
	 * Returns the user ID of this o auth provider.
	 *
	 * @return the user ID of this o auth provider
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this o auth provider.
	 *
	 * @param userId the user ID of this o auth provider
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this o auth provider.
	 *
	 * @return the user uuid of this o auth provider
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this o auth provider.
	 *
	 * @param userUuid the user uuid of this o auth provider
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this o auth provider.
	 *
	 * @return the user name of this o auth provider
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this o auth provider.
	 *
	 * @param userName the user name of this o auth provider
	 */
	public void setUserName(String userName);

	/**
	 * Returns the create date of this o auth provider.
	 *
	 * @return the create date of this o auth provider
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this o auth provider.
	 *
	 * @param createDate the create date of this o auth provider
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this o auth provider.
	 *
	 * @return the modified date of this o auth provider
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this o auth provider.
	 *
	 * @param modifiedDate the modified date of this o auth provider
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the consumer key of this o auth provider.
	 *
	 * @return the consumer key of this o auth provider
	 */
	@AutoEscape
	public String getConsumerKey();

	/**
	 * Sets the consumer key of this o auth provider.
	 *
	 * @param consumerKey the consumer key of this o auth provider
	 */
	public void setConsumerKey(String consumerKey);

	/**
	 * Returns the consumer secret of this o auth provider.
	 *
	 * @return the consumer secret of this o auth provider
	 */
	@AutoEscape
	public String getConsumerSecret();

	/**
	 * Sets the consumer secret of this o auth provider.
	 *
	 * @param consumerSecret the consumer secret of this o auth provider
	 */
	public void setConsumerSecret(String consumerSecret);

	/**
	 * Returns the realm of this o auth provider.
	 *
	 * @return the realm of this o auth provider
	 */
	@AutoEscape
	public String getRealm();

	/**
	 * Sets the realm of this o auth provider.
	 *
	 * @param realm the realm of this o auth provider
	 */
	public void setRealm(String realm);

	/**
	 * Returns the request token u r l of this o auth provider.
	 *
	 * @return the request token u r l of this o auth provider
	 */
	@AutoEscape
	public String getRequestTokenURL();

	/**
	 * Sets the request token u r l of this o auth provider.
	 *
	 * @param requestTokenURL the request token u r l of this o auth provider
	 */
	public void setRequestTokenURL(String requestTokenURL);

	/**
	 * Returns the authorise u r l of this o auth provider.
	 *
	 * @return the authorise u r l of this o auth provider
	 */
	@AutoEscape
	public String getAuthoriseURL();

	/**
	 * Sets the authorise u r l of this o auth provider.
	 *
	 * @param authoriseURL the authorise u r l of this o auth provider
	 */
	public void setAuthoriseURL(String authoriseURL);

	/**
	 * Returns the access token u r l of this o auth provider.
	 *
	 * @return the access token u r l of this o auth provider
	 */
	@AutoEscape
	public String getAccessTokenURL();

	/**
	 * Sets the access token u r l of this o auth provider.
	 *
	 * @param accessTokenURL the access token u r l of this o auth provider
	 */
	public void setAccessTokenURL(String accessTokenURL);

	/**
	 * Returns the protocol version of this o auth provider.
	 *
	 * @return the protocol version of this o auth provider
	 */
	@AutoEscape
	public String getProtocolVersion();

	/**
	 * Sets the protocol version of this o auth provider.
	 *
	 * @param protocolVersion the protocol version of this o auth provider
	 */
	public void setProtocolVersion(String protocolVersion);

	/**
	 * Returns the preemptive auth u r l pattern of this o auth provider.
	 *
	 * @return the preemptive auth u r l pattern of this o auth provider
	 */
	@AutoEscape
	public String getPreemptiveAuthURLPattern();

	/**
	 * Sets the preemptive auth u r l pattern of this o auth provider.
	 *
	 * @param preemptiveAuthURLPattern the preemptive auth u r l pattern of this o auth provider
	 */
	public void setPreemptiveAuthURLPattern(String preemptiveAuthURLPattern);

	/**
	 * Returns the use h t t p s of this o auth provider.
	 *
	 * @return the use h t t p s of this o auth provider
	 */
	public boolean getUseHTTPS();

	/**
	 * Returns <code>true</code> if this o auth provider is use h t t p s.
	 *
	 * @return <code>true</code> if this o auth provider is use h t t p s; <code>false</code> otherwise
	 */
	public boolean isUseHTTPS();

	/**
	 * Sets whether this o auth provider is use h t t p s.
	 *
	 * @param useHTTPS the use h t t p s of this o auth provider
	 */
	public void setUseHTTPS(boolean useHTTPS);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(OAuthProvider oAuthProvider);

	public int hashCode();

	public CacheModel<OAuthProvider> toCacheModel();

	public OAuthProvider toEscapedModel();

	public String toString();

	public String toXmlString();
}